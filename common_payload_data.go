// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package main

import "encoding/json"
import "fmt"
import "reflect"

// main table for storing and tracking data
type CommonPayloadData struct {
	// name of the device from which the data is collected
	Device *string `json:"device,omitempty"`

	// marks data to be skipped
	Disabled *int `json:"disabled,omitempty"`

	// auto-generated primary key
	Id *int64 `json:"id,omitempty"`

	// raw data: json payloads, json schema content, transformer code
	Payload *string `json:"payload,omitempty"`

	// for internal organization; raw: raw payload data; schema: json schema;
	// transformer: jsonata (later also jsonnet) data transformer; derived:
	// post-transform data
	PayloadType *CommonPayloadDataPayloadType `json:"payload_type,omitempty"`

	// Time corresponds to the JSON schema field "time".
	Time *float64 `json:"time,omitempty"`

	// TimeAdded corresponds to the JSON schema field "time_added".
	TimeAdded *float64 `json:"time_added,omitempty"`

	// maps directly to the MQTT topic, but is otherwise an arbitrary
	// "project"/"group"-like identifier
	Topic *string `json:"topic,omitempty"`
}

type CommonPayloadDataPayloadType string

const CommonPayloadDataPayloadTypeDerived CommonPayloadDataPayloadType = "derived"
const CommonPayloadDataPayloadTypeRaw CommonPayloadDataPayloadType = "raw"
const CommonPayloadDataPayloadTypeSchema CommonPayloadDataPayloadType = "schema"
const CommonPayloadDataPayloadTypeTransformer CommonPayloadDataPayloadType = "transformer"

var enumValues_CommonPayloadDataPayloadType = []interface{}{
	"raw",
	"schema",
	"transformer",
	"derived",
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *CommonPayloadDataPayloadType) UnmarshalJSON(b []byte) error {
	var v string
	if err := json.Unmarshal(b, &v); err != nil {
		return err
	}
	var ok bool
	for _, expected := range enumValues_CommonPayloadDataPayloadType {
		if reflect.DeepEqual(v, expected) {
			ok = true
			break
		}
	}
	if !ok {
		return fmt.Errorf("invalid value (expected one of %#v): %#v", enumValues_CommonPayloadDataPayloadType, v)
	}
	*j = CommonPayloadDataPayloadType(v)
	return nil
}
